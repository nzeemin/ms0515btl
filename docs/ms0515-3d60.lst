
157666:			; ??? SP

157672:			; Сохранённый PS
157674:			; Сохранённый PC; #172000
157676:			; ??? #000340

157702:
157704:			; ???
157706:			; Значение для системого регистра C - 177604

157712:			; ???
157714:			; Слово атрибутов при печати строки

157720:			; Значение для системного регистра A - 177600

157730:			; Адрес блока параметров при чтении с НГМД
157732:			; ???

157752:			; ??? #177777, #0 - пульт

157760:			; ??? флаги
157762:			; ???
157764:			; Место для сохранения PS

157766:			; ??? вкл/выкл звука
157770:			; ???

157776:			; ???


160000: JMP    	163534			; Вывод символа; R0 = символ
160004: JMP    	175466			; Ввод символа
160010: JMP    	162224			; Чтение с НГМД
160014: JMP    	163440
160020: JMP    	167012
160024: JMP    	167024
160030: JMP    	167044
160034: JMP    	167056
;
; Начало процедуры холодного старта
160040: MOVB   	#000213, @#177546	; ИРПР: регистр управления
160046: MOVB   	#000202, @#177606	; Управляющее слово программируемого интерфейса
160054: MOVB   	#000377, @#177540
160062: MOVB   	#000007, @#177604	; Системный регистр C: звук выкл, среднее разрешение, белый бордюр
160070: MOVB   	#000026, @#177506	; Таймер упр.слово
160076: MOVB   	#000032, @#177500	; Таймер канал 0
160104: MOVB   	#000126, @#177506	; Таймер упр.слово
160112: MOVB   	#000032, @#177502	; Таймер канал 1
160120: CLR    	R0
160122: MOV    	#000002, R2
160126: MOV    	#177442, R1		; Клавиатура состояние порта (R) / регистр инструкций (W)
160132: MOVB   	R0, (R1)
160134: MOVB   	R0, (R1)
160136: MOVB   	R0, (R1)
160140: MOVB   	#000100, (R1)
160144: MOVB   	#000116, (R1)
160150: MOVB   	#000047, (R1)
160154: MOV    	#177702, R1		; Стык С2
160160: SOB    	R2, 160132		; повторяем второй раз
160162: CLRB   	@#177600		; Системный регистр A
160166: JMP    	172072			; Переходим к тестам памяти
; Рестарт процессора
160172: TST    	@#177770
160176: MOV    	(SP)+, @#157674
160202: MOV    	(SP)+, @#157676
; Точка входа - сюда приходим после холодного старта и тестов памяти
160206: MOV    	SP, @#157666
160212: MOV    	#157674, SP
160216: MOV    	@#157676, -(SP)
160222: MOV    	@#157674, -(SP)
160226: CMP    	R5, -(SP)
160230: MOV    	R5, -(SP)
160232: MOV    	R4, -(SP)
160234: MOV    	R3, -(SP)
160236: MOV    	R2, -(SP)
160240: MOV    	R1, -(SP)
160242: MOV    	R0, -(SP)
160244: TST    	@#157752		; пульт?
160250: BEQ    	160450			; да => Переход на приглашение пульта
160252: RESET  	
160254: BIC    	#000177, @#157760
160262: CLR    	@#157702
160266: CLR    	@#157712
160272: MOV    	#034000, @#157714
160300: BIS    	#000007, @#157706	; Цвет бордюра белый
160306: TSTB   	@#157760
160312: BMI    	160324
160314: BIC    	#000010, @#157706	; Выкл. высокое разрешение экрана
160322: BR     	160332
160324: BIS    	#000010, @#157706
160332: MOVB   	@#157706, @#177604	; Системный регистр C
160340: CLR    	@#157704
160344: MOV    	#000037, @#157720
160352: MOVB   	@#157720, @#177600	; Системный регистр A
160360: CLRB   	@#157722
160364: CLR    	@#157724
160370: CLR    	@#157726
160374: CLR    	@#157710
160400: CLR    	@#157762
160404: CLRB   	@#157770
160410: MTPS   	#000340
; Очистка экрана и возврат в пульт / на заставку
160414: JSR    	R1, 172054		; Печать строки
	.WORD	177253			;   адрес строки
160422: CALL   	166070
160426: MOV    	#110021, R3
160432: CALL   	177042
160436: TST    	@#157752		; пульт?
160442: BEQ    	160450			; да => Переход на приглашение пульта
160444: JMP    	172526			; Переход на заставку
;
160450: MOV    	#157614, SP
160454: CLR    	R1
160456: JSR    	R1, 172054
160462: unknown	177250
160464: MOV    	@#157674, R3
160470: CALL   	160652
160474: MOV    	#157614, SP
160500: JSR    	R1, 172054		; Печать строки
160504: unknown	177244
160506: BIC    	#004040, R1
160512: CLR    	R5
160514: CALL   	160606
160520: BIT    	#002000, R1
160524: BNE    	160550
160526: BIS    	#000040, R1
160532: ASL    	R5
160534: ASL    	R5
160536: ASL    	R5
160540: ADD    	R0, R5
160542: BR     	160514
; Команда пульта не найдена
160544: JMP    	161020
; Команда пульта введена - анализируем и выполняем
160550: MOV    	#177777, R4
160554: MOV    	#177260, R3		; Таблица символов вводимых с пульта
160560: INC    	R4
160562: CMPB   	R0, (R3)+
160564: BEQ    	160574
160566: TSTB   	(R3)
160570: BEQ    	160544
160572: BR     	160560
160574: ASL    	R4
160576: ADD    	#177302, R4
160602: MOV    	(R4), R4
160604: JMP    	(R4)			; Переход к выполнению команды
;
160606: CALL   	175456			; Ожидание символа с клавиатуры
160612: MOVB   	R0, R3
160614: CALL   	160750			; Печать символа
160620: BIC    	#177607, R3
160624: CMP    	#000060, R3
160630: BNE    	160644
160632: BIC    	#002000, R1
160636: BIC    	#177770, R0
160642: RETURN 	
160644: BIS    	#002000, R1
160650: RETURN 	
; Подпрограмма
160652: MOV    	@#157646, @#157634
160660: MOV    	R3, @#157646
160664: MOV    	#000006, R4		; Счётчик цикла печати 8-ричного числа R3
160670: CLR    	R0
160672: ROL    	R3
160674: ROL    	R0
160676: ADD    	#000060, R0
160702: CALL   	160750			; Печать символа
160706: DEC    	R4
160710: BEQ    	160726
160712: CLR    	R0
160714: ROL    	R3
160716: ROL    	R0
160720: ROL    	R3
160722: ROL    	R0
160724: BR     	160672
160726: BIT    	#004000, R1
160732: BNE    	160744
160734: MOV    	#000040, R0
160740: CALL   	160750			; Печать символа
160744: RETURN 	
;
160746: BR     	160474
;
; Подпрограмма: печать символа
160750: CMPB   	#000177, R0
160754: BNE    	161012
160756: CMPB   	#000001, @#157702
160764: BEQ    	161016
160766: MOV    	#000010, R0
160772: CALL   	163534
160776: MOV    	#000040, R0
161002: CALL   	163534
161006: MOV    	#000010, R0
161012: CALL   	163534			; Печать символа R0
161016: RETURN 	
; Команда пульта не найдена - печать '?' и переход к вводу следующей команды
161020: MOVB   	#000177, R0
161024: CALL   	160750			; Печать символа R0
161030: JMP    	160506
; Команда пульта '/' - открыть ячейку по текущему или заданному адресу
161034: BIS    	#000020, R1
161040: BIT    	#000040, R1
161044: BEQ    	161054
161046: MOV    	R5, R2
161050: BIC    	#000500, R1
161054: MOV    	(R2), R3
161056: CALL   	160652			; Печать 8-ричного числа R3
161062: JMP    	160506
; Команда пульта <015>
161066: MOV    	#000012, R0
161072: CALL   	160750			; Печать символа
161076: BIT    	#000040, R1
161102: BEQ    	161134
161104: BIT    	#000020, R1
161110: BEQ    	161134
161112: BIT    	#000100, R1
161116: BEQ    	161132
161120: BIC    	#177420, R5
161124: CLR    	(R2)
161126: BIS    	R5, (R2)
161130: BR     	161134
161132: MOV    	R5, (R2)
161134: BIC    	#000020, R1
161140: JSR    	R1, 172054
161144: unknown	177246
161146: BR     	161362
; Команда пульта <012>
161150: BIS    	#000200, R1
161154: BR     	161172
; Команда пульта '^'
161156: BIC    	#000200, R1
161162: MOV    	#000012, R0
161166: CALL   	160750			; Печать символа
161172: BIT    	#000020, R1
161176: BEQ    	161552
161200: MOV    	#000015, R0
161204: CALL   	160750			; Печать символа
161210: BIT    	#000040, R1
161214: BEQ    	161226
161216: BIT    	#000100, R1
161222: BNE    	161120
161224: MOV    	R5, (R2)
161226: BIT    	#000100, R1
161232: BNE    	161556
161234: BIT    	#000200, R1
161240: BEQ    	161302
161242: ADD    	#000002, R2
161246: BIT    	#000400, R1
161252: BEQ    	161326
161254: MOV    	R1, R0
161256: BIT    	#000200, R1
161262: BEQ    	161310
161264: CMP    	#157672, R2
161270: BNE    	161276
161272: MOV    	#157652, R2
161276: INC    	R0
161300: BR     	161364
161302: SUB    	#000002, R2
161306: BR     	161246
161310: CMP    	#157650, R2
161314: BNE    	161322
161316: MOV    	#157670, R2
161322: DEC    	R0
161324: BR     	161364
161326: BIS    	#004000, R1
161332: MOV    	R2, R3
161334: CALL   	160652			; Печать 8-ричного числа R3
161340: MOV    	#000057, R0
161344: CALL   	160750			; Печать символа
161350: MOV    	(R2), R3
161352: BIC    	#004000, R1
161356: CALL   	160652			; Печать 8-ричного числа R3
161362: BR     	161534
161364: BIC    	#177770, R0
161370: BIC    	#000007, R1
161374: BIS    	R0, R1
161376: MOV    	#000122, R0
161402: CALL   	160750			; Печать символа
161406: MOV    	R1, R0
161410: BIC    	#177770, R0
161414: ADD    	#000060, R0
161420: CALL   	160750			; Печать символа
161424: MOV    	#000057, R0
161430: CALL   	160750			; Печать символа
161434: MOV    	(R2), R3
161436: CALL   	160652			; Печать 8-ричного числа R3
161442: BR     	161534
161444: JMP    	160456
; Команда пульта 'R' - открыть регистр
161450: BIS    	#000400, R1
161454: BIC    	#000040, R1
161460: CALL   	175456
161464: MOV    	R0, R3
161466: CALL   	160750			; Печать символа
161472: CMPB   	#000123, R0
161476: BEQ    	161540
161500: MOV    	#157652, R2
161504: BIC    	#177607, R3
161510: CMP    	#000060, R3
161514: BNE    	161552			; => Ошибка в команде пульта
161516: BIC    	#177770, R0
161522: BIC    	#000107, R1
161526: BIS    	R0, R1
161530: ASL    	R0
161532: ADD    	R0, R2
161534: JMP    	160506
161540: BIS    	#000100, R1
161544: MOV    	#157672, R2
161550: BR     	161362
;
161552: JMP    	161020			; Команда пульта не найдена
;
161556: BIC    	#000020, R1
161562: JMP    	160474
; Команда пульта '@'
161566: BIT    	#000020, R1
161572: BEQ    	161552			; => Ошибка в команде пульта
161574: BIC    	#000400, R1
161600: BIT    	#000040, R1
161604: BNE    	161614
161606: MOV    	@#157646, R2
161612: BR     	161616
161614: MOV    	R5, R2
161616: BIT    	#000100, R1
161622: BEQ    	161630
161624: MOV    	@#157634, R2
161630: JSR    	R1, 172054
161634: unknown	177250
161636: BR     	161326
; Команда пульта '_' - открыть ячейку с относительным адресом
161640: BIT    	#000020, R1
161644: BEQ    	161552			; => Ошибка в команде пульта
161646: BIT    	#000500, R1
161652: BNE    	161556
161654: ADD    	#000002, R2
161660: BIT    	#000040, R1
161664: BEQ    	161672
161666: ADD    	R5, R2
161670: BR     	161616
161672: ADD    	@#157646, R2
161676: BR     	161616
; Команда пульта 'G' - пуск программы с указанного адреса
161700: RESET  	
161702: MOV    	R5, @#157674
161706: MOV    	R5, @#157670
161712: MOV    	#157652, SP
161716: MOV    	(SP)+, R0
161720: MOV    	(SP)+, R1
161722: MOV    	(SP)+, R2
161724: MOV    	(SP)+, R3
161726: MOV    	(SP)+, R4
161730: MOV    	(SP)+, R5
161732: MOV    	(SP), SP
161734: MTPS   	@#157672
161740: MOV    	@#157674, PC
;
; Команда пульта 'P' - продолжить выполнение программы
161744: MOV    	@#157672, @#157676
161752: MOV    	@#157670, @#157674
161760: CLR    	@#157644
161764: BR     	161712
161766: ASR    	R5
161770: ASR    	R5
161772: ASR    	R5
161774: BIC    	#160000, R5
162000: JMP    	160514
;
; Команда пульта 'A' - управление атрибутами рабочей области экрана
162004: BIT    	#000040, R1
162010: BEQ    	161552			; => Ошибка в команде пульта
162012: TSTB   	@#157760
162016: BMI    	161552			; => Ошибка в команде пульта
162020: CALL   	165034			; вкл. ВОЗУ в осн. память
162024: MOV    	#001750, R0
162030: MOV    	#040001, R4
162034: MOVB   	R5, (R4)+
162036: INC    	R4
162040: MOVB   	R5, (R4)+
162042: INC    	R4
162044: MOVB   	R5, (R4)+
162046: INC    	R4
162050: MOVB   	R5, (R4)+
162052: INC    	R4
162054: MOVB   	R5, (R4)+
162056: INC    	R4
162060: MOVB   	R5, (R4)+
162062: INC    	R4
162064: MOVB   	R5, (R4)+
162066: INC    	R4
162070: MOVB   	R5, (R4)+
162072: INC    	R4
162074: SOB    	R0, 162034
162076: SWAB   	R5
162100: MOV    	R5, @#157714
162104: CALL   	165052			; выкл. ВОЗУ из осн. памяти
162110: BR     	162144			; Возврат к приглашению пульта и вводу команды
;
; Команда пульта 'B' - управление цветом бордюра
162112: BIT    	#000040, R1
162116: BEQ    	162010
162120: BIC    	#177770, R5
162124: BIC    	#000007, @#157706
162132: BIS    	R5, @#157706
162136: MOVB   	@#157706, @#177604	; Системный регистр C
162144: JMP    	160474			; Возврат к приглашению пульта и вводу команды
;
; Команда пульта 'D' - Загрузка с НГМД
162150: MOV    	#162206, @#157730	; Адрес блока параметров для чтения первого сектора
162156: BIS    	#100000, @#157720
162164: CALL   	162224			; Чтение с НГМД
162170: BLO    	162176			; ошибка чтения => переходим
162172: JMP    	@#000000		; Запуск кода из загрузочного сектора
162176: JSR    	R1, 172054		; Печать строки "ОШИБКА ЗАГРУЗКИ"
	.WORD	177344			;   адрес строки
162204: BR     	162144			; Возврат к приглашению пульта и вводу команды
; Блок параметров для чтения первого сектора
162206: .WORD	000000, 000000, 000000
162214: BR     	162216
;
; Команда 'V' с пульта - включение/выключение звука
162216: COM    	@#157766		; переключение звука
162222: BR     	162144			; Возврат к приглашению пульта и вводу команды
;
; Подпрограмма: чтение с НГМД
162224: MFPS   	@#157764		; Сохраняем PS
162230: MTPS   	#000340
162234: JSR    	R5, 163400
162240: MOV    	@#157730, R3		; Берём адрес блока параметров
162244: MOV    	(R3)+, R5		; (0-е слово)
162246: MOV    	#000200, R4
162252: MOVB   	(R3)+, R1
162254: BIC    	#000013, @#157720	; очищаем биты выбора привода НГМД
162262: MOVB   	(R3), R2		; Берём байт с номером устройства
162264: COM    	R2
162266: BIC    	#177775, R2		; оставляем бит 1
162272: ASL    	R2
162274: ASL    	R2
162276: MOVB   	(R3)+, R0		; Берём байт с номером устройства
162300: BIC    	#177776, R0		; оставляем бит 0
162304: BIS    	R2, R0
162306: BIS    	R0, @#157720
162312: MOV    	(R3)+, R0		; Берём адрес куда читать (2-е слово)
162314: MOV    	(R3)+, R2		; Берём размер в словах (3-е слово)
162316: BPL    	162326
162320: BIS    	#000240, R4
162324: NEG    	R2
162326: MOV    	R4, @#157750
162332: ASL    	R2			; Переводим размер в байты
162334: MOV    	#173371, R4
162340: CMP    	#002400, R5
162344: BHI    	162352
162346: ADD    	#175400, R5
162352: ROL    	R5
162354: INCB   	R4
162356: BLE    	162340
162360: MOVB   	R5, R1
162362: ADD    	R4, R5
162364: MOV    	R1, R4
162366: ASL    	R1
162370: SUB    	#000012, R1
162374: BGT    	162370
162376: MOV    	R1, @#157744
162402: MOV    	R0, @#157734		; Адрес куда читать
162406: MOV    	R5, @#157736
162412: MOV    	R2, @#157740		; Сколько байт читать
162416: MOVB   	@#157720, @#177600	; Системный регистр A
162424: BIT    	#000004, @#157720	; двигатель НГМД включен?
162432: BEQ    	162464			; да => переходим
162434: BIC    	#000004, @#157720	; бит 2 - двигатель НГМД
162442: MOV    	@#157720, @#177600	; Системный регистр A
162450: MOV    	#000003, R1		; задержки
162454: MOV    	#177777, R3		;   для раскрутки двигателя
162460: SOB    	R3, 162460		; задержка
162462: SOB    	R1, 162454		; ожидаем
162464: MOV    	#000003, @#157742
162472: MOV    	#000012, @#157732
162500: JSR    	R0, 163246
162504: SWAB   	R0
162506: BIT    	#000020, (R4)
162512: BEQ    	162560
162514: DEC    	@#157732
162520: BNE    	162500
162522: TST    	@#157742
162526: BEQ    	162706
162530: JSR    	R0, 163246
162534: BPT    	
162536: MOV    	#020000, R1
162542: SOB    	R1, 162542
162544: JSR    	R0, 163246
162550: JMP    	R0
162552: DEC    	@#157742
162556: BR     	162472
162560: MOVB   	@#177644, @#177642	; Регистр сектора -> регистр дорожки
162566: MOVB   	@#157737, R2
162572: BGT    	162624
162574: SUB    	#177772, R2
162600: BGT    	162610
162602: ADD    	#000004, R2
162606: SEC    	
162610: ROL    	R2
162612: ADD    	@#157744, R2
162616: BGT    	162624
162620: ADD    	#000012, R2
162624: MOV    	@#157736, R3
162630: CMPB   	R3, #000120
162634: BNE    	162640
162636: CLR    	R3
162640: MOV    	#177640, R4
162644: CMPB   	R3, 000002(R4)
162650: BEQ    	162712
162652: MOVB   	R3, 000006(R4)
162656: JSR    	R0, 163246
162662: .WORD	000035
162664: MOV    	#020000, R1
162670: SOB    	R1, 162670		; задержка
162672: BIT    	#000020, (R4)
162676: BEQ    	162712
162700: DEC    	@#157732
162704: BNE    	162500
162706: JMP    	163324
162712: MOV    	@#157734, R5		; Берём адрес куда читать
162716: MOV    	@#157750, R0
162722: MOVB   	R2, 000004(R4)		; Задаём дорожку
162726: MOV    	@#157740, R2		; Сколько байт читать
162732: MOV    	#000002, R1
162736: MOV    	#177777, @#157710
162744: TSTB   	(R4)
162746: BPL    	162760
162750: DEC    	@#157710
162754: BNE    	162744
162756: BR     	162706
162760: MOVB   	R0, (R4)		; Задаём команду
162762: BITB   	#000001, (R4)		; busy?
162766: BEQ    	162762			;   ожидаем busy
162770: NOP    	
162772: BITB   	#000040, R0
162776: BNE    	163044
; Начало цикла чтения данных сектора; R2 = сколько байт читать
163000: BITB   	R1, (R4)		; Есть данные для чтения? (DRQ)
163002: BNE    	163014			;   да => переходим
163004: BITB   	#000001, (R4)		; Busy ещё стоит?
163010: BNE    	163000			;   да => продолжаем цикл
163012: BR     	163116
163014: MOVB   	000006(R4), (R5)+	; Читаем байт данных
163020: SOB    	R2, 163000		; повторяем
163022: BITB   	R1, (R4)
163024: BNE    	163036
163026: BITB   	#000001, (R4)
163032: BNE    	163022
163034: BR     	163116
163036: MOVB   	000006(R4), R5
163042: BR     	163022
163044: BITB   	R1, (R4)
163046: BNE    	163060
163050: BITB   	#000001, (R4)
163054: BNE    	163044
163056: BR     	163110
163060: MOVB   	(R5)+, 000006(R4)
163064: SOB    	R2, 163044
163066: BITB   	R1, (R4)
163070: BNE    	163102
163072: BITB   	#000001, (R4)
163076: BNE    	163066
163100: BR     	163110
163102: CLR    	000006(R4)
163106: BR     	163066
163110: MOV    	#000575, R1
163114: SOB    	R1, 163114		; задержка
163116: BITB   	#000374, (R4)
163122: BEQ    	163162
163124: DEC    	@#157732
163130: BEQ    	163324
163132: BITB   	#000300, (R4)
163136: BEQ    	163324
163140: BITB   	#000020, (R4)
163144: BEQ    	163152
163146: JMP    	162500
163152: BITB   	#000014, (R4)
163156: BNE    	162712
163160: BR     	163324
; Завершено чтение сектора
163162: MOV    	#000012, @#157732
163170: INCB   	@#157737
163174: BNE    	163222
163176: ADD    	#173001, @#157736
163204: ADD    	#000002, @#157744
163212: BLE    	163222
163214: SUB    	#000012, @#157744
163222: MOV    	#001000, R2
163226: ADD    	R2, @#157734
163232: SUB    	R2, @#157740
163236: BHI    	163242
163240: BR     	163314
163242: JMP    	162566
; Подпрограмма
163246: MOV    	#177640, R4
163252: CLR    	@#157710
163256: TSTB   	(R4)			; читаем состояние НГМД
163260: BPL    	163274
163262: DEC    	@#157710
163266: BNE    	163256
163270: TST    	(SP)+
163272: BR     	163324
163274: MOV    	(R0)+, (R4)
163276: BITB   	#000001, (R4)
163302: BEQ    	163276
163304: BITB   	#000001, (R4)
163310: BNE    	163304
163312: RTS    	R0
163314: BIC    	#000001, @#157764
163322: BR     	163332
163324: BIS    	#000001, @#157764
163332: TST    	@#157720
163336: BPL    	163350
163340: BIS    	#040000, @#157720
163346: BR     	163372
163350: BIC    	#040000, @#157720
163356: BIS    	#000017, @#157720
163364: MOVB   	@#157720, @#177600
163372: MTPS   	@#157764		; восстанавливаем PS
163376: RETURN 	
;
163400: MOV    	R4, -(SP)
163402: MOV    	R3, -(SP)
163404: MOV    	R2, -(SP)
163406: MOV    	R1, -(SP)
163410: MOV    	R0, -(SP)
163412: MOV    	R5, -(SP)
163414: MOV    	000014(SP), R5
163420: CALL   	@(SP)+
163422: MOV    	(SP)+, R0
163424: MOV    	(SP)+, R1
163426: MOV    	(SP)+, R2
163430: MOV    	(SP)+, R3
163432: MOV    	(SP)+, R4
163434: MOV    	(SP)+, R5
163436: RETURN 	
;
163440: JSR    	R5, 163400
163444: MOV    	#157760, R4
163450: TSTB   	(R4)
163452: BPL    	163532
163454: BITB   	#000010, (R4)
163460: BNE    	163532
163462: MOV    	#000040, R1
163466: MFPS   	@#157764		; Сохраняем PS
163472: MTPS   	#000340
163476: XOR    	R1, (R4)
163500: MOV    	@#157712, R2
163504: ADD    	#000740, R2
163510: CALL   	165034			; вкл. ВОЗУ в осн. память
163514: COMB   	(R2)
163516: COMB   	000120(R2)
163522: CALL   	165052			; выкл. ВОЗУ из осн. памяти
163526: MTPS   	@#157764
163532: RETURN 	
; Подпрограмма: печать символа R0
163534: MFPS   	@#157764		; Сохраняем PS
163540: MTPS   	#000340
163544: JSR    	R5, 163400
163550: BIC    	#177400, R0
163554: CALL   	165230
163560: MOV    	#157760, R4
163564: BIT    	#000010, (R4)
163570: BNE    	163646
163572: CALL   	165034			; вкл. ВОЗУ в осн. память
163576: ADD    	#000740, R2
163602: TSTB   	(R4)
163604: BPL    	163630
163606: BIT    	#000040, (R4)
163612: BEQ    	163642
163614: BIC    	#000040, (R4)
163620: COMB   	(R2)
163622: COMB   	000120(R2)
163626: BR     	163642
163630: BIC    	#100000, (R2)
163634: BIC    	#100000, 000120(R2)
163642: CALL   	165052			; выкл. ВОЗУ из осн. памяти
163646: MOV    	#157760, R2
163652: MOV    	(R2), R1
163654: BIC    	#177774, R1
163660: BEQ    	164046
163662: CMP    	#000001, R1
163666: BNE    	163706
163670: BICB   	#000001, (R2)
163674: MOV    	#164202, R4
163700: MOV    	#164230, R5
163704: BR     	164114
163706: CMP    	#000002, R1
163712: BNE    	163762
163714: SUB    	#000040, R0
163720: BMI    	163754
163722: TST    	@#157762
163726: BNE    	163740
163730: CMPB   	#000030, R0
163734: BGE    	163750
163736: BR     	163754
163740: CMPB   	#000027, R0
163744: BGE    	163750
163746: BR     	163754
163750: MOVB   	R0, @#157703
163754: BIS    	#000001, (R2)
163760: BR     	164134
163762: CMP    	#000003, R1
163766: BNE    	164040
163770: SUB    	#000040, R0
163774: BMI    	164032
163776: TSTB   	(R2)
164000: BMI    	164016
164002: CMPB   	#000047, R0
164006: BGE    	164034
164010: MOV    	#000047, R0
164014: BR     	164034
164016: CMPB   	#000117, R0
164022: BGE    	164034
164024: MOV    	#000117, R0
164030: BR     	164034
164032: CLR    	R0
164034: MOVB   	R0, @#157702
164040: BIC    	#000003, (R2)
164044: BR     	164134
164046: CMPB   	R0, #000040
164052: BLO    	164060
164054: JMP    	164304
164060: TSTB   	@#157723
164064: BNE    	164104
164066: CMPB   	#000016, R0
164072: BEQ    	164102
164074: CMPB   	#000017, R0
164100: BNE    	164104
164102: BR     	164134
164104: MOV    	#164140, R4
164110: MOV    	#164154, R5
164114: CMPB   	R0, (R4)+
164116: BEQ    	164130
164120: TSTB   	(R4)
164122: BEQ    	164134
164124: TST    	(R5)+
164126: BR     	164114
164130: CALL   	@000000(R5)
164134: JMP    	164740
164140: JSR    	R4, @(R3)+
164142: CLR    	(R5)
164144: NEG    	(R0)
164146: unknown	007014
164150: BLE    	164210
164152: HALT   	
164154: SUB    	166170(R1), -(R0)
164160: SUB    	166062(R0), @-(R4)
164164: SUB    	166062(R0), (R0)+
164170: SUB    	166146(R0), 166154(R2)
164176: SUB    	000000(R0), @041101(R0)
164204: BIC    	(R1)+, R3
164206: BIT    	@050075(R1), (R0)
164212: BIC    	-(R5), (R1)+
164214: MUL    	045512(R0), R5
164220: BIS    	(R1)+, @(R1)+
164222: BIC    	@(R1)+, (R5)+
164224: BIT    	R1, PC
164226: unknown	000061
164230: SUB    	165756(R0), @(SP)+
164234: SUB    	@-(PC), (R4)
164236: SUB    	165602(R0), (R0)+
164242: SUB    	166274(R3), R4
164246: SUB    	166510(R3), (R2)
164252: SUB    	166420(R4), @166634(R4)
164260: SUB    	@-(R5), (R0)
164262: SUB    	@-(R3), (R0)+
164264: SUB    	166746(R1), 166754(R2)
164272: SUB    	153266, 166776(R2)
164300: SUB    	@000000(R0), R4
164304: MOV    	@#157714, R3
164310: MOV    	@#157720, R5
164314: BIS    	#000200, R5
164320: CALL   	165034			; вкл. ВОЗУ в осн. память
164324: BIT    	#000020, (R2)
164330: BEQ    	164366
164332: CMPB   	#000141, R0
164336: BHI    	164452
164340: CMPB   	#000143, R0
164344: BLO    	164452
164346: SUB    	#000141, R0
164352: ASL    	R0
164354: ASL    	R0
164356: ASL    	R0
164360: ADD    	#171470, R0		; знакогенератор доп. символы
164364: BR     	164530
164366: TSTB   	@#157723
164372: BNE    	164456
164374: CMPB   	#000377, R0
164400: BEQ    	164452
164402: CMPB   	R0, #000200
164406: BLO    	164462
164410: SUB    	#000300, R0
164414: BLO    	164432
164416: ASL    	R0			;
164420: ASL    	R0			;
164422: ASL    	R0			; умножить на 8.
164424: ADD    	#170470, R0		; знакогенератор кириллица
164430: BR     	164530
164432: ADD    	#000100, R0
164436: ASL    	R0
164440: ASL    	R0
164442: ASL    	R0
164444: ADD    	#157000, R0
164450: BR     	164530
164452: JMP    	164740
164456: BIC    	#177600, R0
164462: SUB    	#000040, R0
164466: ASL    	R0
164470: ASL    	R0
164472: ASL    	R0
164474: BIT    	#000004, @#157760
164502: BEQ    	164524
164504: CMP    	R0, #000400
164510: BLO    	164524
164512: SUB    	#000400, R0
164516: ADD    	#170470, R0		; знакогенератор кириллица
164522: BR     	164530
164524: ADD    	#167070, R0		; знакогенератор осн. символы
164530: MOV    	@#157712, R4
164534: MOV    	#000010, R2
164540: TSTB   	@#157760
164544: BPL    	164616
164546: BIT    	#000100, @#157760
164554: BNE    	164574
164556: MOV    	R5, @#177600		; Системный регистр A
164562: MOVB   	(R0)+, (R4)
164564: ADD    	#000120, R4
164570: SOB    	R2, 164562
164572: BR     	164640
164574: MOV    	R5, @#177600		; Системный регистр A
164600: MOVB   	(R0)+, R1
164602: COMB   	R1
164604: MOVB   	R1, (R4)
164606: ADD    	#000120, R4
164612: SOB    	R2, 164574
164614: BR     	164640
164616: MOV    	R5, @#177600		; Системный регистр A
164622: CLR    	R1
164624: BISB   	(R0)+, R1
164626: BIS    	R3, R1
164630: MOV    	R1, (R4)
164632: ADD    	#000120, R4
164636: SOB    	R2, 164616
164640: BIC    	#000200, R5
164644: MOV    	R5, @#177600		; Системный регистр A
164650: CALL   	165052			; выкл. ВОЗУ из осн. памяти
164654: CALL   	165610
164660: TST    	@#157702
164664: BNE    	164740
164666: MOVB   	#000030, @#157703
164674: TST    	@#157762
164700: BEQ    	164706
164702: DECB   	@#157703
164706: CMPB   	#000030, @#157703
164714: BEQ    	165070
164716: TST    	@#157762
164722: BEQ    	164734
164724: CMPB   	#000027, @#157703
164732: BEQ    	165070
164734: CALL   	165652
164740: BIT    	#000010, @#157760
164746: BNE    	165022
164750: CALL   	165230
164754: ADD    	#000740, R2
164760: CALL   	165034			; вкл. ВОЗУ в осн. память
164764: TSTB   	@#157760
164770: BPL    	165010
164772: BIS    	#000040, @#157760
165000: COMB   	(R2)
165002: COMB   	000120(R2)
165006: BR     	165022
165010: BIS    	#100000, (R2)
165014: BIS    	#100000, 000120(R2)
165022: CALL   	165052			; выкл. ВОЗУ из осн. памяти
165026: MTPS   	@#157764
165032: RETURN 	
; Подпрограмма: Включить ВОЗУ в основную память
165034: BIS    	#000200, @#157700	; вкл. ВОЗУ в осн. память
165042: MOV    	@#157700, @#177400	; Дисп. памяти
165050: RETURN 	
; Подпрограмма: Выключить ВОЗУ из основной памяти
165052: BIC    	#000200, @#157700	; выкл. ВОЗУ из осн. памяти
165060: MOV    	@#157700, @#177400	; Дисп. памяти
165066: RETURN 	
165070: CALL   	165034			; вкл. ВОЗУ в осн. память
165074: MOV    	#040000, R4
165100: MOV    	#041200, R5
165104: MOV    	#001700, R3
165110: TST    	@#157762
165114: BEQ    	165122
165116: SUB    	#000050, R3
165122: MOV    	(R5)+, (R4)+
165124: MOV    	(R5)+, (R4)+
165126: MOV    	(R5)+, (R4)+
165130: MOV    	(R5)+, (R4)+
165132: MOV    	(R5)+, (R4)+
165134: MOV    	(R5)+, (R4)+
165136: MOV    	(R5)+, (R4)+
165140: MOV    	(R5)+, (R4)+
165142: SOB    	R3, 165122
165144: MOV    	@#157714, R5
165150: MOV    	#000050, R3
165154: TSTB   	@#157760
165160: BPL    	165176
165162: CLR    	R5
165164: TST    	@#157762
165170: BEQ    	165176
165172: ADD    	#000050, R3
165176: MOV    	R5, (R4)+
165200: MOV    	R5, (R4)+
165202: MOV    	R5, (R4)+
165204: MOV    	R5, (R4)+
165206: MOV    	R5, (R4)+
165210: MOV    	R5, (R4)+
165212: MOV    	R5, (R4)+
165214: MOV    	R5, (R4)+
165216: SOB    	R3, 165176
165220: CALL   	165052			; выкл. ВОЗУ из осн. памяти
165224: JMP    	164740
; Подпрограмма
165230: MOV    	@#157702, R2
165234: MOV    	R2, R3
165236: BIC    	#000377, R3
165242: ASL    	R2
165244: ASR    	R3
165246: TSTB   	@#157760
165252: BPL    	165256
165254: RORB   	R2
165256: ADD    	R3, R2
165260: BIT    	#004000, @#157700
165266: BNE    	165302
165270: BIT    	#002000, @#157700
165276: BNE    	165306
165300: BR     	165312
165302: ADD    	#040000, R2
165306: ADD    	#040000, R2
165312: MOV    	R2, @#157712
165316: RETURN 	
165320: MOV    	@#157712, R4
165324: MOVB   	@#157702, R3
165330: MOV    	@#157714, R1
165334: TSTB   	(R2)
165336: BMI    	165424
165340: MOV    	#000050, R0
165344: SUB    	R3, R0
165346: MOV    	R4, -(SP)
165350: MOV    	#000010, R2
165354: BIS    	#000200, @#157700
165362: MOV    	@#157700, @#177400	; Дисп. памяти
165370: MOV    	R1, (R4)
165372: ADD    	#000120, R4
165376: SOB    	R2, 165370
165400: BIC    	#000200, @#157700
165406: MOV    	@#157700, @#177400	; Дисп. памяти
165414: MOV    	(SP)+, R4
165416: TST    	(R4)+
165420: SOB    	R0, 165346
165422: RETURN 	
165424: MOV    	#000120, R0
165430: SUB    	R3, R0
165432: MOV    	R4, -(SP)
165434: MOV    	#000010, R2
165440: BIS    	#000200, @#157700
165446: MOV    	@#157700, @#177400	; Дисп. памяти
165454: CLRB   	(R4)
165456: ADD    	#000120, R4
165462: SOB    	R2, 165454
165464: BIC    	#000200, @#157700
165472: MOV    	@#157700, @#177400	; Дисп. памяти
165500: MOV    	(SP)+, R4
165502: INC    	R4
165504: SOB    	R0, 165432
165506: RETURN 	
165510: CALL   	165320
165514: ADD    	#001060, R4
165520: MOV    	R4, R3
165522: MOV    	#100000, R0
165526: SUB    	R3, R0
165530: ASR    	R0
165532: ASR    	R0
165534: ASR    	R0
165536: ASR    	R0
165540: TSTB   	@#157760
165544: BPL    	165550
165546: CLR    	R1
165550: CALL   	165034			; вкл. ВОЗУ в осн. память
165554: MOV    	R1, (R4)+
165556: MOV    	R1, (R4)+
165560: MOV    	R1, (R4)+
165562: MOV    	R1, (R4)+
165564: MOV    	R1, (R4)+
165566: MOV    	R1, (R4)+
165570: MOV    	R1, (R4)+
165572: MOV    	R1, (R4)+
165574: SOB    	R0, 165554
165576: JMP    	165052			; выкл. ВОЗУ из осн. памяти, и возврат
165602: CLR    	@#157702
165606: RETURN 	
; Подпрограмма
165610: INCB   	@#157702
165614: TSTB   	@#157760
165620: BPL    	165634
165622: CMPB   	#000120, @#157702
165630: BEQ    	165646
165632: RETURN 	
165634: CMPB   	#000050, @#157702
165642: BEQ    	165646
165644: RETURN 	
165646: CLRB   	@#157702
165652: INCB   	@#157703
165656: CMPB   	#000031, @#157703
165664: BEQ    	165706
165666: TST    	@#157762
165672: BEQ    	165704
165674: CMPB   	#000030, @#157703
165702: BEQ    	165706
165704: RETURN 	
165706: CLRB   	@#157703
165712: RETURN 	
165714: INCB   	@#157702
165720: TSTB   	(R2)
165722: BPL    	165736
165724: CMPB   	#000120, @#157702
165732: BEQ    	165750
165734: RETURN 	
165736: CMPB   	#000050, @#157702
165744: BEQ    	165750
165746: RETURN 	
165750: DECB   	@#157702
165754: RETURN 	
165756: INCB   	@#157703
165762: CMPB   	#000031, @#157703
165770: BEQ    	166012
165772: TST    	@#157762
165776: BEQ    	166010
166000: CMPB   	#000030, @#157703
166006: BEQ    	166012
166010: RETURN 	
166012: DECB   	@#157703
166016: RETURN 	
166020: DECB   	@#157702
166024: BMI    	166030
166026: RETURN 	
166030: CLRB   	@#157702
166034: RETURN 	
166036: DECB   	@#157703
166042: BMI    	166046
166044: RETURN 	
166046: CLRB   	@#157703
166052: RETURN 	
166054: CLRB   	@#157702
166060: RETURN 	
166062: TST    	(SP)+
166064: JMP    	164706
166070: CLR    	177776(SP)
166074: MOVB   	#000007, @#177462
166102: BIT    	#000001, @#177442
166110: BNE    	166122
166112: DEC    	177776(SP)
166116: BNE    	166102
166120: BR     	166130
166122: MOV    	#000247, @#177460
166130: MOVB   	#000006, @#177462
166136: RETURN 	
166140: BIS    	#000001, (R2)
166144: RETURN 	
166146: BIS    	#000004, (R2)
166152: RETURN 	
166154: BIC    	#000004, (R2)
166160: RETURN 	
166162: BIS    	#000002, (R2)
166166: RETURN 	
166170: CLR    	R1
166172: BISB   	@#157702, R1
166176: MOV    	#166252, R2
166202: CMPB   	(R2)+, R1
166204: BLOS   	166202
166206: MOVB   	-(R2), R1
166210: TSTB   	@#157760
166214: BMI    	166232
166216: CMPB   	R1, #000050
166222: BLO    	166244
166224: MOVB   	#000040, R1
166230: BR     	166244
166232: CMPB   	R1, #000120
166236: BLO    	166244
166240: MOVB   	#000117, R1
166244: MOVB   	R1, @#157702
166250: RETURN 	
166252: JSR    	R0, R0
166254: MOV    	-(R0), (R0)+
166256: CMP    	-(R0), -(R0)
166260: BIT    	-(R0), 044100(R0)
166264: BIC    	@-(R1), (R1)
166266: BIC    	047115(R1), (R3)
166272: unknown	177517
166274: MOV    	#000001, @#157762
166302: RETURN 	
166304: CLR    	@#157762
166310: RETURN 	
166312: TSTB   	(R2)
166314: BPL    	166414
166316: MOV    	@#157702, R2
166322: BIC    	#000377, R2
166326: ADD    	#000117, R2
166332: CALL   	165234
166336: CALL   	165034			; вкл. ВОЗУ в осн. память
166342: MOVB   	@#157702, R3
166346: MOV    	#000117, R1
166352: SUB    	R3, R1
166354: DEC    	R2
166356: MOV    	R2, R3
166360: MOV    	#000010, R4
166364: MOVB   	(R3), 000001(R3)
166370: ADD    	#000120, R3
166374: SOB    	R4, 166364
166376: SOB    	R1, 166354
166400: MOV    	#000010, R4
166404: CLRB   	(R2)
166406: ADD    	#000120, R2
166412: SOB    	R4, 166404
166414: JMP    	165052			; выкл. ВОЗУ из осн. памяти, и возврат
166420: TSTB   	(R2)
166422: BPL    	166414
166424: CALL   	165230
166430: CALL   	165034			; вкл. ВОЗУ в осн. память
166434: MOVB   	@#157702, R3
166440: MOV    	#000117, R1
166444: SUB    	R3, R1
166446: INC    	R2
166450: MOV    	R2, R3
166452: MOV    	#000010, R4
166456: MOVB   	(R3), 177777(R3)
166462: ADD    	#000120, R3
166466: SOB    	R4, 166456
166470: SOB    	R1, 166446
166472: BR     	166400
166474: TSTB   	@#157703
166500: BEQ    	166510
166502: DECB   	@#157703
166506: RETURN 	
166510: TSTB   	(R2)
166512: BPL    	166506
166514: MOVB   	@#157703, R1
166520: MOV    	#000027, R2
166524: SUB    	R1, R2
166526: ASL    	R2
166530: ASL    	R2
166532: ASL    	R2
166534: MOV    	R2, R1
166536: ASL    	R2
166540: ASL    	R2
166542: ADD    	R1, R2
166544: MOV    	#074600, R5
166550: MOV    	#076000, R4
166554: CALL   	165034			; вкл. ВОЗУ в осн. память
166560: MOV    	-(R5), -(R4)
166562: MOV    	-(R5), -(R4)
166564: MOV    	-(R5), -(R4)
166566: MOV    	-(R5), -(R4)
166570: MOV    	-(R5), -(R4)
166572: MOV    	-(R5), -(R4)
166574: MOV    	-(R5), -(R4)
166576: MOV    	-(R5), -(R4)
166600: SOB    	R2, 166560
166602: MOV    	#000050, R2
166606: CLR    	(R5)+
166610: CLR    	(R5)+
166612: CLR    	(R5)+
166614: CLR    	(R5)+
166616: CLR    	(R5)+
166620: CLR    	(R5)+
166622: CLR    	(R5)+
166624: CLR    	(R5)+
166626: SOB    	R2, 166606
166630: JMP    	165052			; выкл. ВОЗУ из осн. памяти, и возврат
166634: TSTB   	(R2)
166636: BPL    	166630
166640: MOV    	@#157702, R2
166644: BIC    	#000377, R2
166650: CALL   	165234
166654: MOV    	R2, R4
166656: MOV    	R4, R5
166660: ADD    	#001200, R5
166664: MOVB   	@#157703, R1
166670: MOV    	#000027, R2
166674: SUB    	R1, R2
166676: ASL    	R2
166700: ASL    	R2
166702: ASL    	R2
166704: MOV    	R2, R1
166706: ASL    	R2
166710: ASL    	R2
166712: ADD    	R1, R2
166714: CALL   	165034			; вкл. ВОЗУ в осн. память
166720: MOV    	(R5)+, (R4)+
166722: MOV    	(R5)+, (R4)+
166724: MOV    	(R5)+, (R4)+
166726: MOV    	(R5)+, (R4)+
166730: MOV    	(R5)+, (R4)+
166732: MOV    	(R5)+, (R4)+
166734: MOV    	(R5)+, (R4)+
166736: MOV    	(R5)+, (R4)+
166740: SOB    	R2, 166720
166742: MOV    	R4, R5
166744: BR     	166602
166746: BIS    	#000100, (R2)
166752: RETURN 	
166754: BIC    	#000100, (R2)
166760: RETURN 	
166762: BIS    	#000020, (R2)
166766: RETURN 	
166770: BIC    	#000020, (R2)
166774: RETURN 	
166776: BIS    	#000010, (R2)
167002: RETURN 	
167004: BIC    	#000010, (R2)
167010: RETURN 	
;
167012: BIC    	R0, R1
167014: MOV    	R1, @#177400	; Дисп. памяти
167020: MOV    	R3, (R2)+
167022: BR     	167034
;
167024: BIC    	R0, R1
167026: MOV    	R1, @#177400	; Дисп. памяти
167032: MOV    	(R2)+, R3
167034: BIS    	R0, R1
167036: MOV    	R1, @#177400	; Дисп. памяти
167042: RETURN 	
;
167044: BIC    	R0, R1
167046: MOV    	R1, @#177400	; Дисп. памяти
167052: MOVB   	R3, (R2)+
167054: BR     	167034
;
167056: BIC    	R0, R1
167060: MOV    	R1, @#177400	; Дисп. памяти
167064: MOVB   	(R2)+, R3
167066: BR     	167034
; Знакогенератор - основная часть - 96 символов по 8 байт каждый
167070:	.BYTE	000 000 000 000 000 000 000 000		; пробел
	.BYTE	000 020 020 020 020 000 020 000		; '!'
167110:	.BYTE	000 044 044 000 000 000 000 000		; кавычки
	.BYTE	000 044 176 044 044 176 044 000		; '#'
167130:	.BYTE	000 202 174 104 104 174 202 000		; черепашка
	.BYTE	000 142 144 010 020 046 106 000		; '%'
167150:	.BYTE	000 020 050 020 052 104 072 000		; '&'
	.BYTE	000 010 020 000 000 000 000 000		; апостроф
167170:	.BYTE	000 004 010 010 010 010 004 000		; '('
	.BYTE	000 040 020 020 020 020 040 000		; ')'
167210:	.BYTE	000 000 024 010 076 010 024 000		; '*'
	.BYTE	000 000 010 010 076 010 010 000		; '+'
167230:	.BYTE	000 000 000 000 000 010 010 020		; ','
	.BYTE	000 000 000 000 076 000 000 000		; '-'
167250:	.BYTE	000 000 000 000 000 030 030 000		; '.'
	.BYTE	000 000 002 004 010 020 040 000		; '/'
167270:	.BYTE	000 074 106 112 122 142 074 000		; '0'
	.BYTE	000 030 050 010 010 010 076 000		; '1'
167310:	.BYTE	000 074 102 002 074 100 176 000		; '2'
	.BYTE	000 074 102 014 002 102 074 000		; '3'
167330:	.BYTE	000 010 030 050 110 176 010 000		; '4'
	.BYTE	000 176 100 174 002 102 074 000		; '5'
167350:	.BYTE	000 074 100 174 102 102 074 000		; '6'
	.BYTE	000 176 002 004 010 020 020 000		; '7'
167370:	.BYTE	000 074 102 074 102 102 074 000		; '8'
	.BYTE	000 074 102 102 076 002 074 000		; '9'
167410:	.BYTE	000 000 000 020 000 000 020 000		; ':'
	.BYTE	000 000 020 000 000 020 020 040		; ';'
167430:	.BYTE	000 000 004 010 020 010 004 000		; '<'
	.BYTE	000 000 000 076 000 076 000 000		; '='
167450:	.BYTE	000 000 020 010 004 010 020 000		; '>'
	.BYTE	000 074 102 004 010 000 010 000		; '?'
167470:	.BYTE	000 074 112 126 136 100 074 000		; '@'
	.BYTE	000 074 102 102 176 102 102 000		; 'A'
167510:	.BYTE	000 174 102 174 102 102 174 000		; 'B'
	.BYTE	000 074 102 100 100 102 074 000		; 'C'
167530:	.BYTE	000 170 104 102 102 104 170 000		; 'D'
	.BYTE	000 176 100 174 100 100 176 000		; 'E'
167550:	.BYTE	000 176 100 174 100 100 100 000		; 'F'
	.BYTE	000 074 102 100 116 102 074 000		; 'G'
167570:	.BYTE	000 102 102 176 102 102 102 000		; 'H'
	.BYTE	000 076 010 010 010 010 076 000		; 'I'
167610:	.BYTE	000 002 002 002 102 102 074 000		; 'J'
	.BYTE	000 104 110 160 110 104 102 000		; 'K'
167630:	.BYTE	000 100 100 100 100 100 176 000		; 'L'
	.BYTE	000 102 146 132 102 102 102 000		; 'M'
167650:	.BYTE	000 102 142 122 112 106 102 000		; 'N'
	.BYTE	000 074 102 102 102 102 074 000		; 'O'
167670:	.BYTE	000 174 102 102 174 100 100 000		; 'P'
	.BYTE	000 074 102 102 122 112 074 000		; 'Q'
167710:	.BYTE	000 174 102 102 174 104 102 000		; 'R'
	.BYTE	000 074 100 074 002 102 074 000		; 'S'
167730:	.BYTE	000 376 020 020 020 020 020 000		; 'T'
	.BYTE	000 102 102 102 102 102 074 000		; 'U'
167750:	.BYTE	000 102 102 102 102 044 030 000		; 'V'
	.BYTE	000 102 102 102 102 132 044 000		; 'W'
167770:	.BYTE	000 102 044 030 030 044 102 000		; 'X'
	.BYTE	000 202 104 050 020 020 020 000		; 'Y'
170010:	.BYTE	000 176 004 010 020 040 176 000		; 'Z'
	.BYTE	000 016 010 010 010 010 016 000		; '['
170030:	.BYTE	000 000 100 040 020 010 004 000		; '\'
	.BYTE	000 160 020 020 020 020 160 000		; ']'
170050:	.BYTE	000 020 070 124 020 020 020 000		; стрелка вверх
	.BYTE	000 000 000 000 000 000 000 377		; подчёркивание
170070:	.BYTE	000 074 112 126 136 100 074 000		; '@'
	.BYTE	000 000 070 004 074 104 074 000		; 'a'
170110:	.BYTE	000 040 040 074 042 042 074 000		; 'b'
	.BYTE	000 000 034 040 040 040 034 000		; 'c'
170130:	.BYTE	000 004 004 074 104 104 074 000		; 'd'
	.BYTE	000 000 070 104 170 100 074 000		; 'e'
170150:	.BYTE	000 014 020 030 020 020 020 000		; 'f'
	.BYTE	000 000 074 104 104 074 004 070		; 'g'
170170:	.BYTE	000 100 100 170 104 104 104 000		; 'h'
	.BYTE	000 020 000 060 020 020 070 000		; 'i'
170210:	.BYTE	000 004 000 004 004 004 044 030		; 'j'
	.BYTE	000 040 050 060 060 050 044 000		; 'k'
170230:	.BYTE	000 020 020 020 020 020 014 000		; 'l'
	.BYTE	000 000 150 124 124 124 124 000		; 'm'
170250:	.BYTE	000 000 170 104 104 104 104 000		; 'n'
	.BYTE	000 000 070 104 104 104 070 000		; 'o'
170270:	.BYTE	000 000 170 104 104 170 100 100		; 'p'
	.BYTE	000 000 074 104 104 074 004 006		; 'q'
170310:	.BYTE	000 000 034 040 040 040 040 000		; 'r'
	.BYTE	000 000 070 100 070 004 170 000		; 's'
170330:	.BYTE	000 020 070 020 020 020 014 000		; 't'
	.BYTE	000 000 104 104 104 104 070 000		; 'u'
170350:	.BYTE	000 000 104 104 050 050 020 000		; 'v'
	.BYTE	000 000 104 124 124 124 050 000		; 'w'
170370:	.BYTE	000 000 104 050 020 050 104 000		; 'x'
	.BYTE	000 000 104 104 104 074 004 070		; 'y'
170410:	.BYTE	000 000 174 010 020 040 174 000		; 'z'
	.BYTE	000 016 010 060 010 010 016 000		; '{'
170430:	.BYTE	000 010 010 010 010 010 010 000		; '|'
	.BYTE	000 160 020 014 020 020 160 000		; '}'
170450:	.BYTE	000 024 050 000 000 000 000 000		; тильда??
	.BYTE	000 000 000 000 000 000 000 000		; пустой
; Знакогенератор - кириллица - 64 символа по 8 байт каждый
170470:	.BYTE	000 000 314 326 366 326 314 000		; 'ю'
	.BYTE	000 000 170 014 174 314 176 000		; 'а'
170510:	.BYTE	000 000 374 300 374 306 374 000		; 'б'
	.BYTE	000 000 314 314 314 314 376 006		; 'ц'
170530:	.BYTE	000 000 074 154 154 154 376 306		; 'д'
	.BYTE	000 000 170 314 374 300 170 000		; 'е'
170550:	.BYTE	000 000 030 176 333 176 030 030		; 'ф'
	.BYTE	000 000 374 300 300 300 300 000		; 'г'
170570:	.BYTE	000 000 306 154 070 154 306 000		; 'х'
	.BYTE	000 000 306 306 316 376 146 000		; 'и'
170610:	.BYTE	014 030 306 306 316 376 146 000		; 'й'
	.BYTE	000 000 314 330 360 330 316 000		; 'к'
170630:	.BYTE	000 000 036 066 146 146 346 000		; 'л'
	.BYTE	000 000 306 356 376 326 306 000		; 'м'
170650:	.BYTE	000 000 306 306 376 306 306 000		; 'н'
	.BYTE	000 000 174 306 306 306 174 000		; 'о'
170670:	.BYTE	000 000 376 306 306 306 306 000		; 'п'
	.BYTE	000 000 176 306 176 146 306 000		; 'я'
170710:	.BYTE	000 000 374 306 306 374 300 300		; 'р'
	.BYTE	000 000 174 306 300 306 174 000		; 'с'
170730:	.BYTE	000 000 374 060 060 060 060 000		; 'т'
	.BYTE	000 000 306 146 076 006 174 000		; 'у'
170750:	.BYTE	000 000 326 326 174 326 326 000		; 'ж'
	.BYTE	000 000 370 314 370 314 370 000		; 'в'
170770:	.BYTE	000 000 300 300 374 306 374 000		; 'ь'
	.BYTE	000 000 306 306 366 332 366 000		; 'ы'
171010:	.BYTE	000 000 170 314 030 314 170 000		; 'з'
	.BYTE	000 000 326 326 326 326 376 000		; 'ш'
171030:	.BYTE	000 000 374 006 036 006 374 000		; 'э'
	.BYTE	000 000 326 326 326 326 376 006		; 'щ'
171050:	.BYTE	000 000 314 314 174 014 014 000		; 'ч'
	.BYTE	000 000 340 140 174 146 174 000		; 'ъ'
171070:	.BYTE	314 326 326 366 326 326 314 000		; 'Ю'
	.BYTE	060 170 314 314 374 314 314 000		; 'А'
171110:	.BYTE	376 140 140 174 146 146 374 000		; 'Б'
	.BYTE	314 314 314 314 314 314 376 006		; 'Ц'
171130:	.BYTE	074 154 154 154 154 154 376 306		; 'Д'
	.BYTE	376 142 150 170 150 142 376 000		; 'Е'
171150:	.BYTE	030 176 333 333 176 030 074 000		; 'Ф'
	.BYTE	376 146 140 140 140 140 360 000		; 'Г'
171170:	.BYTE	306 154 070 070 154 306 306 000		; 'Х'
	.BYTE	306 306 316 336 366 346 306 000		; 'И'
171210:	.BYTE	070 306 316 336 366 346 306 000		; 'Й'
	.BYTE	306 314 330 360 330 314 306 000		; 'К'
171230:	.BYTE	036 066 146 146 146 146 306 000		; 'Л'
	.BYTE	306 356 376 376 326 306 306 000		; 'М'
171250:	.BYTE	314 314 314 374 314 314 314 000		; 'Н'
	.BYTE	174 306 306 306 306 306 174 000		; 'О'
171270:	.BYTE	376 306 306 306 306 306 306 000		; 'П'
	.BYTE	176 306 306 176 066 146 306 000		; 'Я'
171310:	.BYTE	374 146 146 174 140 140 360 000		; 'Р'
	.BYTE	074 146 300 300 300 146 074 000		; 'С'
171330:	.BYTE	374 264 060 060 060 060 170 000		; 'Т'
	.BYTE	306 306 306 176 006 014 170 000		; 'У'
171350:	.BYTE	326 326 174 070 174 326 326 000		; 'Ж'
	.BYTE	374 146 146 174 146 146 374 000		; 'В'
171370:	.BYTE	300 300 300 374 306 306 374 000		; 'Ь'
	.BYTE	306 306 306 366 332 332 366 000		; 'Ы'
171410:	.BYTE	174 306 006 034 006 306 174 000		; 'З'
	.BYTE	306 326 326 326 326 326 376 000		; 'Ш'
171430:	.BYTE	174 306 006 076 006 306 174 000		; 'Э'
	.BYTE	306 326 326 326 326 326 376 006		; 'Щ'
171450:	.BYTE	306 306 306 176 006 006 006 000		; 'Ч'
	.BYTE	000 000 000 000 000 000 000 376		; подчёркивание
; Знакогенератор - дополнительные символы
171470:	.BYTE	000 124 050 124 050 124 050 000		; штриховка
	.BYTE	200 340 370 376 370 340 200 000		; треугольник вправо
171510:	.BYTE	170 100 160 117 110 016 010 010		; "FF"
	.BYTE	120 121 122 123 000 000 104 103		; ??
171530:	.BYTE	102 101 105 106 107 110 111 112		; ??
	.BYTE	113 114 115 116 033 125 126 127		; ??
171550:	.BYTE	130 131 000 000 132 133 134 000		; ??
;
171560: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171600: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171620: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171640: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171660: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171700: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171720: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171740: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
171760: .WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
;
; Старт процессора	
172000: JMP    	160040
; Рестарт процессора
172004: JMP    	160172
;
; Подпрограмма: найти выставленный бит в R1 и получить адрес 2-символьной строки для кол-ва Кбайт
172010: BIS    	#000200, R1
172014: CLR    	R3
172016: INC    	R3
172020: ROR    	R1
172022: BHIS   	172016
172024: ASL    	R3
172026: ADD    	#175140, R3		; Адрес таблицы 2-символьных строк
172032: RETURN 	
;
172034: MFPS   	R0
172036: BIC    	#177760, R0
172042: ADD    	R0, @#156600
172046: RETURN 	
; Подпрограмма с вызовом по R1: печать строки
172050: MOV    	(R1)+, @#157714		; слово атрибутов при печати символов
172054: MOV    	(R1)+, R3		; начало строки
172056: BR     	172064
172060: CALL   	@#163534		; Печать символа R0
172064: MOVB   	(R3)+, R0		; берём символ
172066: BNE    	172060			; не 0 => продолжаем
172070: RTS    	R1
;
; Тесты памяти после холодного старта
172072: MOV    	#002377, @#177400	; Дисп. памяти
172100: MOV    	#043777, R0
172104: MOV    	#040000, R4
172110: MOV    	#004000, R1		; счётчик = 2048.
172114: MOV    	R0, (R4)+
172116: MOV    	R0, (R4)+
172120: MOV    	R0, (R4)+
172122: MOV    	R0, (R4)+
172124: SOB    	R1, 172114
172126: MOV    	#000002, R2		; Счётчик - начало очистки ОЗУ
172132: MOV    	#000177, @#177400	; Дисп. памяти: включаем везде основное ОЗУ
172140: CLR    	R4			; начиная с адреса 000000
172142: MOV    	#016000, R3		; счётчик цикла
172146: CLR    	(R4)+
172150: CLR    	(R4)+
172152: CLR    	(R4)+
172154: CLR    	(R4)+
172156: SOB    	R3, 172146		; повторяем
172160: CLR    	@#177400		; Дисп. памяти: включаем везде доп. ОЗУ
172164: SOB    	R2, 172140		; повторяем второй раз
172166: CLR    	R0
172170: MOV    	#000002, R1		; Счётчик - повторим два раза
172174: MOV    	#000177, @#177400	; Дисп. памяти: включаем везде основное ОЗУ
172202: MOV    	#000002, R2		; Счётчик - повторим два раза
172206: CLR    	SP
172210: MOV    	#067777, R3
172214: CMP    	R0, (SP)
172216: BEQ    	172254
172220: MOV    	SP, R4
172222: ROL    	R4
172224: ROL    	R4
172226: ROL    	R4
172230: ROL    	R4
172232: BIC    	#177770, R4
172236: INC    	R4
172240: CLR    	R5
172242: SEC    	
172244: ROL    	R5
172246: SOB    	R4, 172244
172250: BIS    	R5, @#157776
172254: COM    	(SP)+
172256: SOB    	R3, 172214
172260: CLR    	@#177400		; Дисп. памяти: включаем везде доп. ОЗУ
172264: SOB    	R2, 172206		; повторяем второй раз
172266: COM    	R0
172270: SOB    	R1, 172174		; повторяем второй раз
172272: MOV    	#000002, R1
172276: MOV    	#000177, @#177400	; Дисп. памяти
172304: MOV    	#000002, R2
172310: MOV    	#157776, SP
172314: MOV    	#067777, R3
172320: CMP    	R0, -(SP)
172322: BEQ    	172360
172324: MOV    	SP, R4
172326: ROL    	R4
172330: ROL    	R4
172332: ROL    	R4
172334: ROL    	R4
172336: BIC    	#177770, R4
172342: INC    	R4
172344: CLR    	R5
172346: SEC    	
172350: ROL    	R5
172352: SOB    	R4, 172350
172354: BIS    	R5, @#157776
172360: COM    	(SP)
172362: SOB    	R3, 172320
172364: CLR    	@#177400		; Дисп. памяти: включаем везде доп. ОЗУ
172370: SOB    	R2, 172310		; повторяем второй раз
172372: COM    	R0
172374: SOB    	R1, 172276		; повторяем второй раз
172376: MOV    	#002377, @#177400	; Дисп. памяти
172404: CLR    	@#157774
172410: MOV    	#043777, R0
172414: MOV    	#000002, R2
172420: MOV    	#040000, R4
172424: MOV    	#020000, R1
172430: CMP    	R0, (R4)
172432: BEQ    	172440
172434: BIS    	R4, @#157774
172440: MOV    	#034000, (R4)+
172444: SOB    	R1, 172430		; продолжаем цикл
172446: MOV    	#034000, R0
172452: SOB    	R2, 172420		; повторяем второй раз
172454: MOV    	#002177, @#157700
172462: MOV    	@#157700, @#177400	; Дисп. памяти
172470: CLR    	@#157766		; выкл. звук?
172474: MOV    	#172000, @#157674
172502: MOV    	#000340, @#157676
172510: MOV    	#157614, SP
172514: MOV    	#177777, @#157752	; запоминаем что мы не в пульте
172522: JMP    	160206			; Переход на процедуру рестарта
;
; Заставка и результаты стартовых тестов
172526: JSR    	R1, 172050		; Печать строки пробелов над "Электроника"
	.WORD	070000, 174570		;   на жёлтом фоне
172536: JSR    	R1, 172050		; Печать строки "Электроника"
172542: ADD    	R4, R0
172544: unknown	174624
172546: JSR    	R1, 172050		; Печать строки
172552: MUL    	R0, R0
172554: unknown	174660
172556: JSR    	R1, 172050		; Печать строки "Тест  О З У "
172562: BIT    	@-(R0), R0
172564: unknown	174714
172566: JSR    	R1, 172050		; Печать строки "Без дефектов:"
172572: BIT    	-(R0), R0
172574: unknown	174735
172576: JSR    	R1, 172054
	.WORD	174757			;   адрес строки
172604: MOV    	@#157776, R1
172610: CALL   	172010			; По битам в R1 получить 2-симв. строку
172614: MOV    	#071000, @#157714
172622: MOVB   	(R3)+, R0
172624: CALL   	163534
172630: MOVB   	(R3), R0
172632: CALL   	163534
172636: JSR    	R1, 172050		; Печать строки
172642: BIT    	-(R0), R0
172644: unknown	175003
172646: JSR    	R1, 172050		; Печать строки
172652: BIT    	-(R0), R0
172654: unknown	175013
172656: MOV    	#002077, @#177400	; Дисп. памяти - вкл. доп.память
172664: MOV    	@#157776, R1		; берём из доп.памяти
172670: MOV    	#002177, @#177400	; Дисп. памяти - выкл. доп.память
172676: CALL   	172010			; По битам в R1 получить 2-симв. строку
172702: MOV    	#071000, @#157714
172710: MOVB   	(R3)+, R0
172712: CALL   	163534
172716: MOVB   	(R3), R0
172720: CALL   	163534
172724: JSR    	R1, 172050		; Печать строки
172730: BIT    	-(R0), R0
172732: unknown	175003
172734: JSR    	R1, 172054		; Печать строки "Дисплейное     "
	.WORD	175037			;   адрес строки
172742: TST    	@#157774
172746: BEQ    	172756
172750: MOV    	#175142, R3
172754: BR     	172762
172756: MOV    	#175146, R3
172762: MOV    	#071000, @#157714
172770: MOVB   	(R3)+, R0
172772: CALL   	163534
172776: MOVB   	(R3), R0
173000: CALL   	163534
173004: JSR    	R1, 172050		; Печать строки
173010: BIT    	-(R0), R0
173012: unknown	175003
173014: JSR    	R1, 172050		; Печать строки
173020: BIT    	@-(R0), R0
173022: unknown	175063
; Тест ПЗУ - подсчёт контрольной суммы
173024: MOV    	#160000, R1		; Начало ПЗУ
173030: CLR    	R0			; очищаем сумму
173032: ADD    	(R1)+, R0		;   добавляем очередное слово
173034: CMP    	#177400, R1		;   дошли до конца?
173040: BNE    	173032			; нет => продолжаем цикл
173042: TST    	R0			; сумма равна нулю?
173044: BEQ    	173056
173046: JSR    	R1, 172050		; Печать строки
	.WORD	171000, 175103
173056: JSR    	R1, 172050		; Печать строки
173062: BIT    	@-(R0), R0
173064: unknown	175116
; Тест процессора
173066: CLR    	R5
173070: CLR    	@#156600
173074: MOV    	#156600, R4
173100: MFPS   	R0
173102: BIC    	#000017, R0
173106: MTPS   	R0
173110: CCC    	
173112: MOV    	#156606, @#156606
173120: CALL   	172034
173124: BIC    	174566, R1
173130: CALL   	172034
173134: ADD    	@156606(R1), R1
173140: CALL   	172034
173144: BIS    	#000001, (R1)+
173150: CALL   	172034
173154: SUB    	#156606, -(R1)
173160: CALL   	172034
173164: SUB    	#000001, (R1)
173170: BIT    	174566, (R1)
173174: CALL   	172034
173200: MOV    	#156606, 000002(R1)
173206: CALL   	172034
173212: ADD    	#000002, R1
173216: MOV    	(R1), @(R1)+
173220: CALL   	172034
173224: MOV    	@-(R1), R1
173226: CALL   	172034
173232: CMP    	#156606, R1
173236: BNE    	173254
173240: CALL   	172034
173244: ADD    	R1, (R4)
173246: CMP    	#156702, (R4)
173252: BEQ    	173266
173254: JSR    	R1, 172050		; Печать строки
	.WORD	171000, 175162
173264: BR     	173264			; зацикливание
173266: CLR    	(R1)
173270: CALL   	172034
173274: COM    	(R1)
173276: CALL   	172034
173302: INC    	(R1)
173304: CALL   	172034
173310: TST    	(R1)
173312: CALL   	172034
173316: DEC    	(R1)
173320: CALL   	172034
173324: NEG    	(R1)
173326: CALL   	172034
173332: ROR    	(R1)
173334: MOV    	(R1), R2
173336: ADC    	(R1)
173340: CALL   	172034
173344: ADD    	R2, (R4)
173346: ROL    	(R1)
173350: CALL   	172034
173354: ASR    	(R1)
173356: MOV    	(R1), R2
173360: SBC    	(R1)
173362: CALL   	172034
173366: ADD    	R2, (R4)
173370: ASL    	(R1)
173372: CALL   	172034
173376: SWAB   	(R1)
173400: CALL   	172034
173404: ADD    	(R1), (R4)
173406: CMP    	#157745, (R4)
173412: BEQ    	173416
173414: BR     	173254
173416: SEC    	
173420: BHIS   	173414			; => дефект
173422: CLC    	
173424: BLO    	173414			; => дефект
173426: CLZ    	
173430: BLOS   	173414			; => дефект
173432: SEZ    	
173434: BHI    	173414			; => дефект
173436: CLV    	
173440: BVS    	173414			; => дефект
173442: SEV    	
173444: BVC    	173414			; => дефект
173446: CLN    	
173450: BMI    	173414			; => дефект
173452: SEN    	
173454: BPL    	173414			; => дефект
173456: BLT    	173414			; => дефект
173460: CLN    	
173462: BGE    	173414			; => дефект
173464: CCC    	
173466: BLE    	173414			; => дефект
173470: SCC    	
173472: BGT    	173414			; => дефект
173474: CALL   	172034
173500: SXT    	R2
173502: CALL   	172034
173506: BR     	173512
173510: BR     	173530
173512: MOV    	#177775, R3
173516: XOR    	R3, R2
173520: CALL   	172034
173524: SOB    	R2, 173510
173526: BR     	173414			; => дефект
173530: CALL   	172034
173534: ADD    	#000043, R2
173540: CALL   	172034
173544: ADD    	R3, R2
173546: ADD    	R2, (R4)
173550: CMP    	#160045, (R4)
173554: BNE    	173414			; => дефект
173556: JSR    	R1, 172054		; Печать строки "Без дефектов"
	.WORD	175175			;   адрес строки
173564: CALL   	174422
173570: MOVB   	#000007, @#177462
173576: MOV    	#000012, @#157742
173604: MOV    	@#177440, R1		; Клавиатура
173610: BIT    	#000001, @#177442	; Клавиатура
173616: BEQ    	173610
173620: MOV    	#000253, @#177460	; Клавиатура буфер данных передатчика
173626: CLR    	R2
173630: BIT    	#000002, @#177442	; Клавиатура
173636: BNE    	173670
173640: DEC    	R2
173642: BNE    	173630
173644: JSR    	R1, 172050		; Печать строки "Клавиатура не готова"
173650: unknown	171000
173652: unknown	175216
173654: CALL   	174422
173660: DEC    	@#157742
173664: BPL    	173610
173666: BR     	173742
173670: MOV    	@#177440, R0
173674: CMPB   	#000001, R0
173700: BNE    	173644
173702: BIT    	#000002, @#177442
173710: BEQ    	173702
173712: MOV    	@#177440, R0
173716: TSTB   	R0
173720: BNE    	173644
173722: MOV    	#110021, R3
173726: CALL   	177042
173732: JSR    	R1, 172050		; Печать строки "Клавиатура готова"
173736: BIT    	-(R0), R0
173740: unknown	175412
173742: MOV    	#177640, R4
173746: MOV    	#000001, R5
173752: MOV    	#000030, @#157720
173760: MOV    	@#157720, @#177600	; Системный регистр A
173766: MOV    	#000003, R1
173772: MOV    	#177777, R3
173776: SOB    	R3, 173776		; задержка
174000: SOB    	R1, 173772		; задержка
174002: MOV    	#000012, @#157742
174010: JSR    	R0, 174372
174014: SWAB   	R0
174016: BITB   	#000020, (R4)
174022: BEQ    	174062
174024: DEC    	@#157742
174030: BNE    	174036
174032: JMP    	174252			; ошибка => НГМД не готов
174036: JSR    	R0, 174372
174042: BPT    	
174044: MOV    	#020000, R1
174050: SOB    	R1, 174050		; задержка
174052: JSR    	R0, 174372
174056: JMP    	R3
174060: BR     	174010
174062: MOVB   	@#177644, @#177642
174070: MOVB   	#000001, 000006(R4)
174076: JSR    	R0, 174372
174102: unknown	000035
174104: MOV    	#020000, R1
174110: SOB    	R1, 174110
174112: BITB   	#000020, (R4)
174116: BEQ    	174130
174120: DEC    	@#157732
174124: BNE    	174002
174126: BR     	174200			; ошибка => НГМД не готов
174130: MOV    	#000005, R2
174134: JSR    	R0, 174372
174140: JMP    	R3
174142: SOB    	R2, 174134
174144: JSR    	R0, 174372
174150: SWAB   	R0
174152: BITB   	#000020, (R4)
174156: BEQ    	174170
174160: DEC    	@#157742
174164: BNE    	174144
174166: BR     	174200			; ошибка => НГМД не готов
174170: CMPB   	@#177644, #000006	; Регистр сектора = 6 ?
174176: BEQ    	174202
174200: BR     	174240			; ошибка => НГМД не готов
174202: MOV    	#000005, R2
174206: JSR    	R0, 174372
174212: JMP    	-(R3)
174214: SOB    	R2, 174206
174216: JSR    	R0, 174372
174222: SWAB   	R0
174224: BITB   	#000020, (R4)
174230: BEQ    	174242
174232: DEC    	@#157742
174236: BNE    	174216
174240: BR     	174252			; ошибка => НГМД не готов
174242: CMPB   	@#177644, #000001	; Регистр сектора = 1 ?
174250: BEQ    	174332			; НГМД готов => переходим к загрузке
174252: JSR    	R1, 172050		; Печать строки "КНГМД не готов - ПУЛЬТОВЫЙ режим"
	.WORD	171000, 175247		;   атрибуты, адрес строки
174262: BIS    	#000017, @#157720
174270: MOVB   	@#157720, @#177600	; Системный регистр A
174276: CALL   	174422			; Мелодия на старте
174302: TST    	@#157752		; мы в пульте?
174306: BEQ    	174320			; да => переходим
174310: CLR    	@#157752		; запоминаем что теперь мы в пульте
174314: JMP    	173742
174320: MOV    	#034000, @#157714
174326: JMP    	177104			; Изменить разрешение экрана и перейти в пульт
;
174332: BIS    	#000200, @#157760
174340: BIS    	#000010, @#157706
174346: MOV    	@#157706, @#177604	; Системный регистр C
174354: JSR    	R1, 172054		; Печать строки "НГМД готов, идет загрузка операционной системы"
	.WORD	175317			;   адрес строки
174362: CLR    	@#157752		; запоминаем что теперь мы в пульте
174366: JMP    	162150			; На загрузку с НГМД
;
; Подпрограмма, вызов по R0
174372: CLR    	R1
174374: TSTB   	(R4)
174376: BPL    	174406
174400: DEC    	R1
174402: BNE    	174374
174404: BR     	174252			; ошибка => НГМД не готов
174406: MOV    	(R0)+, (R4)
174410: BITB   	R5, (R4)
174412: BEQ    	174410
174414: BITB   	R5, (R4)
174416: BNE    	174414
174420: RTS    	R0
;
; Подпрограмма: Мелодия на старте
174422: JSR    	R5, 174462
174426: MOV    	@(SP)+, @(R0)+
174430: JSR    	R5, 174462
174434: MOV    	(R2), @004567(R1)
174440: RSEL   	
174442: unknown	007677
174444: JSR    	R5, 174462
174450: TST    	(R4)
174452: JSR    	R5, 174462
174456: MOV    	@(SP)+, @(R0)+
174460: RETURN 	
; Подпрограмма с вызовом по R5: звук
174462: MOV    	(R5)+, R3
174464: CALL   	174472
174470: RTS    	R5
; Подпрограмма генерации звука, R3 задаёт задержку для таймера
174472: BIC    	#000340, @#177604	; таймер звука выкл, звук выкл, тон звука выкл
174500: MOVB   	#000266, @#177526	; канал 2: будет загрузка младшего и старшего байта, режим 3 (генератор меандра)
174506: MOV    	#000060, R4
174512: MOVB   	R3, @#177524		; передаём младший байт
174516: SWAB   	R3
174520: MOVB   	R3, @#177524		; передаём старший байт
174524: BIS    	#000300, @#177604	; таймер звука вкл, звук вкл
174532: MOV    	#005777, R0		; значение малого счётчика = 005777
174536: SOB    	R0, 174536		; ожидаем
174540: SOB    	R4, 174532		; ожидаем
174542: BIC    	#000340, @#157706	; таймер звука выкл, звук выкл, тон звука выкл
174550: MOV    	@#157706, @#177604	; Системный регистр C
174556: MOV    	#017777, R0
174562: SOB    	R0, 174562
174564: RETURN 	
174566: .WORD   005777
174570: .BYTE	033, 131, 044, 050
	.ASCIZ	/                       /
174624: .BYTE	033, 131, 045, 050
	.ASCII	/ Э л е к т р о н и к а /
174660: .ASCII	<033><131><046><050>
	.ASCIZ	/                       /
174714: .ASCII	<033><131><050><045>
	.ASCIZ	/Тест  О З У /
174735: .ASCIZ	<033><131><052><045>/Без дефектов:/
174757: .ASCIZ	<033><131><054><051>/Основное       /
175003: .ASCIZ	/  Кбайт/
175013: .ASCIZ	<033><131>/Дополнительное /
175037: .ASCIZ	<033><131>/Дисплейное     /
175063: .ASCIZ	<033><131><060><045>/Тест  П З У/
175116: .ASCIZ	<033><131><064><045>/Тест процессора/
175162: .ASCIZ	<033><131><066><054>/Дефект/
175175: .ASCIZ	<033><131><066><051>/Без дефектов/
175216: .ASCIZ	<033><131><070><045>/Клавиатура не готова/
175247: .ASCIZ	<033><131><070><040>/КНГМД не готов - ПУЛЬТОВЫЙ режим/
175317: .ASCII	<033><110><033><112><011><011>
	.ASCII	/НГМД готов, идет загрузка операционной системы .../
	.ASCIZ	<015><012>
175412: .ASCII	<033><131><070><045><033><113><033><110><033><113>
	.ASCIZ	/     Клавиатура готова/
175455: .BYTE	000
; Подпрограмма: ожидание ввода символа с клавиатуры
175456: CALL   	175466
175462: BLO    	175456
175464: RETURN 	
; Подпрограмма: Проверка клавиатуры есть ли символ
175466: MOV    	R1, -(SP)
175470: MOV    	R2, -(SP)
175472: MOV    	R3, -(SP)
175474: MOV    	#157770, R1
175500: CALL   	177014
175504: BEQ    	175532
175506: INC    	R2
175510: MOVB   	157770(R2), R0
175514: INCB   	(R1)
175516: TST    	#000261
175522: MOV    	(SP)+, R3
175524: MOV    	(SP)+, R2
175526: MOV    	(SP)+, R1
175530: RETURN 	
175532: MOV    	#000017, R3
175536: BIT    	#000002, @#177442	; Клавиатура
175544: BNE    	175552
175546: SOB    	R3, 175536
175550: BR     	175520
175552: MOVB   	@#177440, R2
175556: BIC    	#177400, R2
175562: TST    	@#157766
175566: BEQ    	175574
175570: CALL   	166070
175574: CMP    	R2, #000256
175600: BLO    	175612
175602: BNE    	175616
175604: INC    	@#157716
175610: BR     	175520
175612: JMP    	176206
175616: CMP    	R2, #000264
175622: BHI    	176020
175624: BNE    	175634
175626: BICB   	#000003, (R1)
175632: BR     	175474
175634: CMP    	#000263, R2
175640: BNE    	175654
175642: CLR    	@#157716
175646: CLR    	@#157724
175652: BR     	175520
175654: CMP    	R2, #000257
175660: BNE    	175670
175662: INC    	@#157724
175666: BR     	175520
175670: CMP    	R2, #000260
175674: BNE    	175730
175676: COMB   	@#157722
175702: TST    	@#157722
175706: BNE    	175716
175710: MOV    	#102021, R3
175714: BR     	175722
175716: MOV    	#102023, R3
175722: CALL   	177042
175726: BR     	175520
175730: CMP    	R2, #000262
175734: BNE    	175726
175736: BIT    	#000004, @#157760
175744: BEQ    	175766
175746: MOV    	#000017, R0
175752: MOV    	#110021, R3
175756: BIC    	#000004, @#157760
175764: BR     	176004
175766: MOV    	#000016, R0
175772: MOV    	#110023, R3
175776: BIS    	#000004, @#157760
176004: CALL   	177042
176010: TSTB   	@#157723
176014: BEQ    	175520
176016: BR     	176170
176020: MOV    	@#157722, R1
176024: MOV    	@#157716, R3
176030: SUB    	#000274, R2
176034: TSTB   	R1
176036: BNE    	176052
176040: TSTB   	R3
176042: BNE    	176056
176044: ADD    	#176570, R2		; адрес таблицы клавиш
176050: BR     	176062
176052: TSTB   	R3
176054: BNE    	176044
176056: ADD    	#176672, R2		; адрес таблицы клавиш
176062: MOVB   	(R2), R0
176064: TST    	@#157724
176070: BEQ    	176132
176072: BIC    	#177740, R0
176076: TSTB   	@#157723
176102: BNE    	176170
176104: BIT    	#000004, @#157760
176112: BEQ    	176170
176114: TSTB   	R3
176116: BEQ    	176164
176120: TSTB   	R1
176122: BEQ    	176164
176124: ADD    	#000040, R0
176130: BR     	176164
176132: TSTB   	@#157723
176136: BNE    	176170
176140: BIT    	#000004, @#157760
176146: BEQ    	176170
176150: CMP    	#000177, R0
176154: BEQ    	176170
176156: CMP    	R0, #000100
176162: BLO    	176170
176164: BIS    	#000200, R0
176170: MOV    	#157770, R1
176174: MOVB   	#000011, (R1)+
176200: MOVB   	R0, (R1)
176202: JMP    	175516
176206: CMP    	R2, #000241
176212: BLO    	176244
176214: SUB    	#000241, R2
176220: MOVB   	171520(R2), R0
176224: MOV    	#157770, R1
176230: MOVB   	#000021, (R1)+
176234: MOVB   	#000033, (R1)+
176240: MOVB   	R0, (R1)
176242: BR     	176316
176244: CMP    	R2, #000222
176250: BLO    	176326
176252: SUB    	#000222, R2
176256: MOVB   	176774(R2), R0
176262: TST    	@#157762
176266: BEQ    	176560
176270: BIS    	#000100, R0
176274: MOV    	#157770, R1
176300: MOVB   	#000031, (R1)+
176304: MOVB   	#000033, (R1)+
176310: MOVB   	#000077, (R1)+
176314: MOVB   	R0, (R1)
176316: MOV    	#000033, R0
176322: JMP    	175516
176326: CMP    	R2, #000203
176332: BNE    	176364
176334: TSTB   	@#157717
176340: BNE    	176352
176342: COMB   	@#157717
176346: JMP    	160474
176352: CLRB   	@#157717
176356: MOV    	#000005, R0
176362: BR     	176170
176364: CMP    	R2, #000212
176370: BLO    	176460
176372: SUB    	#000131, R2
176376: MOV    	#157770, R1
176402: TSTB   	@#157723
176406: BEQ    	176434
176410: MOVB   	#000041, (R1)+
176414: MOVB   	#000033, (R1)+
176420: MOVB   	#000133, (R1)+
176424: MOVB   	R2, (R1)+
176426: MOVB   	#000176, (R1)
176432: BR     	176316
176434: MOVB   	#000031, (R1)+
176440: MOVB   	#000233, (R1)+
176444: MOVB   	R2, (R1)+
176446: MOVB   	#000176, (R1)+
176452: MOV    	#000233, R0
176456: BR     	176322
176460: CMP    	R2, #000174
176464: BLO    	176474
176466: MOV    	#000156, R0
176472: BR     	176546
176474: CMP    	R2, #000161
176500: BLO    	176520
176502: BNE    	176512
176504: MOV    	#000033, R0
176510: BR     	176560
176512: MOV    	#000147, R0
176516: BR     	176546
176520: CMP    	R2, #000144
176524: BLO    	176534
176526: MOV    	#000137, R0
176532: BR     	176546
176534: CMP    	R2, #000126
176540: BLO    	176564
176542: MOV    	#000126, R0
176546: SUB    	R0, R2
176550: MOVB   	171532(R2), R0
176554: JMP    	176224
176560: JMP    	176170
176564: JMP    	175520
; Таблица клавиш??
176570: .BYTE	177, 015, 011, 073, 061, 112, 106, 121
	.BYTE	176, 062, 103, 131, 136, 012, 057, 063
	.BYTE
; Таблица клавиш??
176672: .WORD

; Подпрограмма
177014: MOVB   	(R1), R2
177016: MOV    	R2, R3
177020: BIC    	#177770, R2
177024: ASR    	R3
177026: ASR    	R3
177030: ASR    	R3
177032: BIC    	#177770, R3
177036: CMP    	R3, R2
177040: RETURN 	
; Подпрограмма
177042: MOVB   	#000007, @#177462
177050: MOV    	#000002, R1
177054: BITB   	#000001, @#177442
177062: BEQ    	177054
177064: MOVB   	R3, @#177460
177070: SWAB   	R3
177072: SOB    	R1, 177054
177074: MOVB   	#000006, @#177462
177102: RETURN 	
; Команда пульта 'H' - Изменить разрешение экрана
177104: TSTB   	@#157760
177110: BPL    	177150
177112: CLR    	@#157760
177116: BIC    	#000010, @#157706
177124: BR     	177164
177126: MOV    	#010000, R0
177132: MOV    	#001000, R1
177136: XOR    	R1, (R0)
177140: SWAB   	(R0)
177142: TST    	(R0)+
177144: SOB    	R1, 177136
177146: RETURN 	
177150: BIS    	#000200, @#157760	; Вкл. высокое разрешение экрана
177156: BIS    	#000010, @#157706
177164: MOVB   	@#157706, @#177604	; Системный регистр C
177172: JMP    	160414			; Очистка экрана и возврат в пульт
; Команда пульта 'K' - Установить КОИ7 (7K) или КОИ8 (0K)
177176: BIT    	#000040, R1		; Есть параметр команды?
177202: BEQ    	177222			; нет => неизвестная команда пульта
177204: BIC    	#177770, R5		; параметр урезаем до 0..7
177210: TST    	R5			; параметр 0?
177212: BEQ    	177226			; да => переход
177214: CMPB   	#000007, R5		; параметр 7?
177220: BEQ    	177234			; да => переход
177222: JMP    	161020			; Неизвестная команда пульта
177226: BIC    	#000004, @#157760
177234: MOVB   	R5, @#157723
177240: JMP    	160474			; Возврат к приглашению пульта
;
177244: .BYTE	015, 012
177246: .BYTE	100, 000
177250: .BYTE	015, 012, 000
177253: .BYTE	033, 110, 033, 112, 000
; Символы-команды, вводимые в режиме пульта, адреса программ см. 177302
177260: .BYTE	057, 015, 012, 136	; '/', <015>, <012>, '^'
	.BYTE	100, 137, 122, 107	; '@', '_', 'R', 'G'
	.BYTE	120, 177, 010, 101	; 'P', <177>, <010>, 'A'
	.BYTE	102, 104, 110, 126	; 'B', 'D', H', 'V'
	.BYTE	113, 000		; 'K'
; Адреса программ обработки символов в режиме пульта
177302: .WORD	161034, 161066, 161150, 161156	; '/', <015>, <012>, '^'
	.WORD	161566, 161640, 161450, 161700	; '@', '_', 'R', 'G'
	.WORD	161744, 161766, 161766, 162004	; 'P', <177>, <010>, 'A'
	.WORD	162112, 162150, 177104, 162216	; 'B', 'D', H', 'V'
	.WORD	177176				; 'K'

177344: .ASCIZ	<015><012>/ОШИБКА ЗАГРУЗКИ/
177366: .WORD	000000, 000000, 000000, 032126, 146503

;
; Таблица адресов регистров
;
177400:			; Регистр диспетчера памяти 177400..177437

177440:			; Клавиатура: буфер данных приёмника (R)
177442:			; Клавиатура: регистр состояния порта (R) / регистр инструкций (W)
177460:			; Клавиатура: буфер данных передатчика
177462:			; Клавиатура: регистр уплавления (R)

177500:			; Таймер канал 0
177502:			; Таймер канал 1
177504:			; Таймер канал 2
177506:			; Таймер упр.слово

177520:			; Таймер канал 0 (W)
177522:			; Таймер канал 1 (W)
177524:			; Таймер канал 2 (W)
177526:			; Таймер упр.слово (W)

177540:
177542:			; Клавиатура
177544:			; Клавиатура
177546:			; ИРПР: регистр управления

177600:			; Системный регистр A
177602:			; Системный регистр B
177604:			; Системный регистр C
177606:			; Управляющее слово программируемого интерфейса

177640:			; НГМД состояние (R) / команда (W)
177642:			; НГМД дорожка
177644:			; НГМД сектор
177646:			; НГМД данные

177700:			; Стык С2
177702:			; Стык С2
